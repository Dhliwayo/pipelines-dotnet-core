name: $(date:yyyyMMdd)$(rev:.r)_PerilsProximity_Configs_Release

#Pipeline actions:
# select environment eg staging, fint, pre-prod, prod
# PnP config files are copied to the machine(s) for the target environment using WinRm
# Once the files are copied, the next step requires manual approval
# Check that the files copied currently to $(pnp_config_working_directory)\ variable eg. C:\PnPConfigsDeployment\ are as expected
# After manual approval, the copied files are deployed into relevant folders eg wwwroot, PnP services etc.

trigger:
  - config-pipeline
  - master

appendCommitMessageToRunName: false

pool:
  name: GeoRisk_AWS_LZ

parameters:
  - name: environment
    displayName: Environment
    type: string
    default: Staging
    values:
    - Staging
    - Fint
    - Preprod
    - Production
  - name: BuildArtifacts
    displayName: Build and Copy PnP configs
    type: boolean
    default: true
  - name: DeployPnPConfigs
    displayName: Deploy PnP Configs
    type: boolean
    default: true

variables:
- group: PerilsProximity.GeoRisk.${{ parameters.environment }} # note there's a dash at the beginning of the line
- name: time
  value: $[ format('{0:yyyy}-{0:MM}-{0:dd}-{0:HHmm}', pipeline.startTime) ]
- name: build_artifact_name
  value: Build-drop-${{ parameters.environment }}
- name: deployPnPConfigsWorkingDir
  value: $(pnp_config_working_directory)\$(build_artifact_name)
- name: deployPnPConfigsScriptPath
  value: $(deployPnPConfigsWorkingDir)\${{ parameters.environment }}\deploy_config.ps1

stages:
  - stage: BuildArtifacts
    condition: and(succeeded(), ${{ eq(parameters.BuildArtifacts,true) }})  
    jobs:
    - job: CopyFilesToEnvironment
      displayName: ${{ parameters.environment }} build artifact for PnP configs
      steps:
        - task: CopyFiles@2
          displayName: 'Copy ${{ parameters.environment }} files to: $(Build.ArtifactStagingDirectory)'
          inputs:
            contents: |
              ${{ parameters.environment }}/config/batch.config
              ${{ parameters.environment }}/config/BatchProcessorService.exe.config
              ${{ parameters.environment }}/config/BatchProcessor_Log.config
              ${{ parameters.environment }}/config/BatchSubmissionService.exe.config
              ${{ parameters.environment }}/config/BatchSubmission_log.config
              ${{ parameters.environment }}/config/BatchWebTestHarness.exe.config
              ${{ parameters.environment }}/config/Create_Message.exe.config
              ${{ parameters.environment }}/config/MQListener.exe.config
              ${{ parameters.environment }}/config/TEst_App.exe.config
              ${{ parameters.environment }}/config/BatchManager/Web.config
              ${{ parameters.environment }}/config/BatchStatus/Web.config
              ${{ parameters.environment }}/config/BestAddress/Web.config
              ${{ parameters.environment }}/config/Geoassessment/Web.config
              ${{ parameters.environment }}/config/GlobalExposure/Web.config
              ${{ parameters.environment }}/config/LocatorHubWS/Web.config
              ${{ parameters.environment }}/config/PerilsPlusWS/Web.config
              utilities/deploy_config.ps1
            targetFolder: $(Build.ArtifactStagingDirectory)
        - task: PowerShell@2
          displayName: 'Move deploy_config script'
          inputs:
            targetType: 'inline'
            script: |
              Copy-Item -Path $(Build.ArtifactStagingDirectory)/utilities/deploy_config.ps1 -Destination $(Build.ArtifactStagingDirectory)/${{ parameters.environment }}/deploy_config.ps1
        - task: CmdLine@2
          displayName: Display tree of build artifact from $(Build.ArtifactStagingDirectory) 
          inputs:
            script: |
              echo ##[debug]List of built in variables in Build.ArtifactStagingDirectory 
              tree $(Build.ArtifactStagingDirectory) /F
        - task: PublishBuildArtifacts@1
          displayName: 'Publish artifact'
          inputs:
            pathToPublish: $(Build.ArtifactStagingDirectory)
            artifactName: $(build_artifact_name)

        # Download build artifacts v1
        # Download files that were saved as artifacts of a completed build.
        - task: DownloadBuildArtifacts@1
          displayName: 'Download build artifact'
          inputs:
            buildType: 'current' 
            buildVersionToDownload: 'latest' 
            downloadType: 'single' 
            artifactName: $(build_artifact_name) 
            downloadPath: $(System.ArtifactsDirectory) 
            cleanDestinationFolder: true 
            checkDownloadedFiles: true 
        - task: CmdLine@2
          displayName: Display tree of sytem artifact dir from $(System.ArtifactsDirectory)
          inputs:
            script: |
                echo ##[debug]List of built in variables in System.ArtifactsDirectory 
                tree $(System.ArtifactsDirectory) /F
        - task: PowerShell@2
          displayName: 'Copying files to $(server_service_connections)'
          inputs:
            targetType: 'inline'
            script: |
              $serverConns = "$(server_service_connections)"

              ForEach ($server in $serverConns.split(",")) {
                $indexOfPort =$server.IndexOf(":")
                $computername  = $server.Substring(0,$indexOfPort)
                $computerport = $server.Substring($indexOfPort + 1, 4)

                $soptions = New-PSSessionOption -SkipCACheck -SkipCNCheck
                $secpasswd = ConvertTo-SecureString "$(pnp_service_account_password)" -AsPlainText -Force
                $cred = New-Object System.Management.Automation.PSCredential ("$(pnp_service_account_name)", $secpasswd) 
                $sourceDirectory="$(System.ArtifactsDirectory)"
                $destinationFolder="$(deployPnPConfigsWorkingDir)"

                Write-Host "Copying files source directory:  $sourceDirectory, destination directory:  $destinationFolder, target computer:  $computername, port: $computerport "

                $session = New-PSSession -ComputerName $computername -Port $computerport -Credential $cred -SessionOption $soptions

                Write-Host "Deleting exisiting deployment folder contents"

                Invoke-Command -Session $session -Command {Remove-Item -Path $Using:destinationFolder\* -Recurse -Force   }

                Write-Host "Copying new files"
                
                Copy-Item $sourceDirectory\* -Destination $destinationFolder -ToSession $session  -Recurse  -Force

                Remove-PSSession -Session $session
              }


    - job: ApproveDeployment
      displayName: ${{ parameters.environment }} wait for manual approval 
      dependsOn: CopyFilesToEnvironment
      timeoutInMinutes: 4320 # job times out in 3 days
      pool: server 
      steps:   
      - task: ManualValidation@1
        timeoutInMinutes: 4320 # task times out in 3 days
        inputs:
          notifyUsers: |
            itai.dhliwayo@uk.rsagroup.com
          instructions: 'Please validate the build drop in ${{ parameters.environment }} and resume deployment'
          allowApproversToApproveTheirOwnRuns: true
          onTimeout: 'reject'

  - stage: DeployPnPConfigs
    condition: and(succeeded('BuildArtifacts'), ${{ eq(parameters.DeployPnPConfigs,true) }})  
    jobs:
    - job: Deploy
      displayName:  ${{ parameters.environment }}  PnP config deploy 
      steps:
        - task: PowerShellOnTargetMachines@3
          displayName: Deploying to  targets using WinRm $(server_service_connections)
          inputs:
            Machines: $(server_service_connections)
            UserName: $(pnp_service_account_name)
            UserPassword: $(pnp_service_account_password)
            WorkingDirectory: $(deployPnPConfigsWorkingDir)\${{ parameters.environment }}
            ScriptType: 'FilePath' # 'FilePath' | 'Inline'. Script Type. Default: Inline
            ScriptPath: $(deployPnPConfigsScriptPath)
            CommunicationProtocol: 'Http' # 'Http' | 'Https'. Protocol. Default: Https.
            AuthenticationMechanism: 'Default' # 'Default' | 'Credssp'. Authentication. Default: Default.
            NewPsSessionOptionArguments: '-SkipCACheck -IdleTimeout 7200000 -OperationTimeout 0 -OutputBufferingMode Block' # string. Session Option parameters. Default: -SkipCACheck -IdleTimeout 7200000 -OperationTimeout 0 -OutputBufferingMode Block.
