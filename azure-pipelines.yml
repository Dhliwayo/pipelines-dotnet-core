name: $(SourceBranchName)_$(date:yyyyMMdd)$(rev:.r)_PerilsProximity_Build_Configs
  
trigger:
  - config-pipeline
  - master

appendCommitMessageToRunName: false

pool:
  vmImage: windows-latest

parameters:
  - name: environment
    displayName: Environment
    type: string
    default: staging
    values:
    - staging
    - fint
    - preprod
    - production

variables:
- group: PerilsProximity.Configs.Staging # note there's a dash at the beginning of the line
- name: time
  value: $[ format('{0:yyyy}-{0:MM}-{0:dd}-{0:HHmm}', pipeline.startTime) ]
- name: varname2
  value: value2


jobs:
- job: CopyFilesForEnvironment
  steps:
    - task: CopyFiles@2
      displayName: 'Copy ${{ parameters.environment }} config  files to: $(Build.ArtifactStagingDirectory)'
      inputs:
        contents: |
          ${{ parameters.environment }}/config/batch.config
          ${{ parameters.environment }}/config/BatchProcessorService.exe.config
          ${{ parameters.environment }}/config/BatchProcessor_Log.config
          ${{ parameters.environment }}/config/BatchSubmissionService.exe.config
          ${{ parameters.environment }}/config/BatchSubmission_log.config
          ${{ parameters.environment }}/config/BatchWebTestHarness.exe.config
          ${{ parameters.environment }}/config/Create_Message.exe.config
          ${{ parameters.environment }}/config/MQListener.exe.config
          ${{ parameters.environment }}/config/TEst_App.exe.config
          ${{ parameters.environment }}/config/BatchManager/Web.config
          ${{ parameters.environment }}/config/BatchStatus/Web.config
          ${{ parameters.environment }}/config/BestAddress/Web.config
          ${{ parameters.environment }}/config/Geoassessment/Web.config
          ${{ parameters.environment }}/config/GlobalExposure/Web.config
          ${{ parameters.environment }}/config/LocatorHubWS/Web.config
          ${{ parameters.environment }}/config/PerilsPlusWS/Web.config
          utilities/deploy_config.ps1
        targetFolder: $(Build.ArtifactStagingDirectory)
    - task: PowerShell@2
      displayName: 'Move deploy_config script'
      inputs:
        targetType: 'inline'
        script: |
          Move-Item -Path $(Build.ArtifactStagingDirectory)/utilities/deploy_config.ps1 -Destination $(Build.ArtifactStagingDirectory)/${{ parameters.environment }}/deploy_config.ps1
    - task: PublishBuildArtifacts@1
      displayName: 'Publish artifact'
      inputs:
        pathToPublish: $(Build.ArtifactStagingDirectory)
        artifactName: PnP-Config-Drop-${{ parameters.environment }}-$(time)

    # Download build artifacts v1
    # Download files that were saved as artifacts of a completed build.
    - task: DownloadBuildArtifacts@1
      displayName: 'Download artifact'
      inputs:
        buildType: 'current' # 'current' | 'specific'. Required. Download artifacts produced by. Default: current.
        #project: # string. Required when buildType == specific. Project. 
        #pipeline: # string. Alias: definition. Required when buildType == specific. Build pipeline. 
        #specificBuildWithTriggering: false # boolean. Optional. Use when buildType == specific. When appropriate, download artifacts from the triggering build. Default: false.
        buildVersionToDownload: 'latest' # 'latest' | 'latestFromBranch' | 'specific'. Required when buildType == specific. Build version to download. Default: latest.
        #allowPartiallySucceededBuilds: false # boolean. Optional. Use when buildType == specific && buildVersionToDownload != specific. Download artifacts even from partially succeeded builds. Default: false.
        #branchName: 'refs/heads/master' # string. Required when buildType == specific && buildVersionToDownload == latestFromBranch. Branch name. Default: refs/heads/master.
        #buildId: # string. Required when buildType == specific && buildVersionToDownload == specific. Build. 
        #tags: # string. Optional. Use when buildType == specific && buildVersionToDownload != specific. Build Tags. 
        downloadType: 'single' # 'single' | 'specific'. Required. Download type. Default: single.
        artifactName: PnP-Config-Drop-${{ parameters.environment }}-$(time) # string. Required when downloadType == single. Artifact name. 
        #itemPattern: '**' # string. Matching pattern. Default: **.
        downloadPath: '$(System.ArtifactsDirectory)' # string. Required. Destination directory. Default: $(System.ArtifactsDirectory).
        cleanDestinationFolder: true # boolean. Clean destination folder. Default: false.
      # Advanced
        #parallelizationLimit: '8' # string. Parallelization limit. Default: 8.
        checkDownloadedFiles: true # boolean. Check downloaded files. Default: false.
        #retryDownloadCount: '4' # string. Retry count. Default: 4.
        #extractTars: # boolean. Extract all files that are stored inside tar archives.

- job: CopyFilesUsingSSH
  steps:
    - task: CopyFilesOverSSH@0
      displayName: 'Copy files to server via SSH to target environment $(deployment_ssh_connection)'
      inputs:
        sshEndpoint: $(deployment_ssh_connection)
        sourceFolder: '$(System.ArtifactsDirectory)'
        contents: '**'
        targetFolder: 'D:\PnPConfigs\${{ parameters.environment }}'
        isWindowsOnTarget: true
        cleanTargetFolder: true
        readyTimeout: '20000'

    - task: SSH@0
      displayName: 'Run deployment script via SSH on target environment $(deployment_ssh_connection)'
      inputs:
        sshEndpoint: $(deployment_ssh_connection)
        runOptions: 'commands'
        commands: 'D:\PnPConfigs\${{ parameters.environment }}\deploy_config.ps1'
        readyTimeout: '20000'


  

 
